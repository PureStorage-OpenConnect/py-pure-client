"""
    FlashBlade REST API

    A lightweight client for FlashBlade REST API 2.1, developed by Pure Storage, Inc. (http://www.purestorage.com/).

    The version of the OpenAPI document: 2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


class __LazyApiLoader:
    def __init__(self, modname, attr):
        self._modname  = modname
        self._attr     = attr
        self._mod      = None

    def load(self):
        import importlib
        if self._mod is None:
            self._mod = importlib.__import__(self._modname, globals(), locals(), fromlist=[self._attr], level=1)
        return getattr(self._mod, self._attr)

__class_apis_dict = { 
    'APIClientsApi': __LazyApiLoader('api_clients_api', 'APIClientsApi'),
    'ActiveDirectoryApi': __LazyApiLoader('active_directory_api', 'ActiveDirectoryApi'),
    'AdministratorsApi': __LazyApiLoader('administrators_api', 'AdministratorsApi'),
    'AlertWatchersApi': __LazyApiLoader('alert_watchers_api', 'AlertWatchersApi'),
    'AlertsApi': __LazyApiLoader('alerts_api', 'AlertsApi'),
    'ArrayConnectionsApi': __LazyApiLoader('array_connections_api', 'ArrayConnectionsApi'),
    'ArraysApi': __LazyApiLoader('arrays_api', 'ArraysApi'),
    'AuditsApi': __LazyApiLoader('audits_api', 'AuditsApi'),
    'AuthorizationApi': __LazyApiLoader('authorization_api', 'AuthorizationApi'),
    'BladesApi': __LazyApiLoader('blades_api', 'BladesApi'),
    'BucketReplicaLinksApi': __LazyApiLoader('bucket_replica_links_api', 'BucketReplicaLinksApi'),
    'BucketsApi': __LazyApiLoader('buckets_api', 'BucketsApi'),
    'CertificateGroupsApi': __LazyApiLoader('certificate_groups_api', 'CertificateGroupsApi'),
    'CertificatesApi': __LazyApiLoader('certificates_api', 'CertificatesApi'),
    'ClientsApi': __LazyApiLoader('clients_api', 'ClientsApi'),
    'DNSApi': __LazyApiLoader('dns_api', 'DNSApi'),
    'DirectoryServicesApi': __LazyApiLoader('directory_services_api', 'DirectoryServicesApi'),
    'FileSystemReplicaLinksApi': __LazyApiLoader('file_system_replica_links_api', 'FileSystemReplicaLinksApi'),
    'FileSystemSnapshotsApi': __LazyApiLoader('file_system_snapshots_api', 'FileSystemSnapshotsApi'),
    'FileSystemsApi': __LazyApiLoader('file_systems_api', 'FileSystemsApi'),
    'HardwareApi': __LazyApiLoader('hardware_api', 'HardwareApi'),
    'HardwareConnectorsApi': __LazyApiLoader('hardware_connectors_api', 'HardwareConnectorsApi'),
    'KMIPApi': __LazyApiLoader('kmip_api', 'KMIPApi'),
    'KeytabsApi': __LazyApiLoader('keytabs_api', 'KeytabsApi'),
    'LifecycleRulesApi': __LazyApiLoader('lifecycle_rules_api', 'LifecycleRulesApi'),
    'LinkAggregationGroupsApi': __LazyApiLoader('link_aggregation_groups_api', 'LinkAggregationGroupsApi'),
    'LogsApi': __LazyApiLoader('logs_api', 'LogsApi'),
    'NetworkInterfacesApi': __LazyApiLoader('network_interfaces_api', 'NetworkInterfacesApi'),
    'ObjectStoreAccessKeysApi': __LazyApiLoader('object_store_access_keys_api', 'ObjectStoreAccessKeysApi'),
    'ObjectStoreAccessPoliciesApi': __LazyApiLoader('object_store_access_policies_api', 'ObjectStoreAccessPoliciesApi'),
    'ObjectStoreAccountsApi': __LazyApiLoader('object_store_accounts_api', 'ObjectStoreAccountsApi'),
    'ObjectStoreRemoteCredentialsApi': __LazyApiLoader('object_store_remote_credentials_api', 'ObjectStoreRemoteCredentialsApi'),
    'ObjectStoreUsersApi': __LazyApiLoader('object_store_users_api', 'ObjectStoreUsersApi'),
    'ObjectStoreVirtualHostsApi': __LazyApiLoader('object_store_virtual_hosts_api', 'ObjectStoreVirtualHostsApi'),
    'PoliciesApi': __LazyApiLoader('policies_api', 'PoliciesApi'),
    'QuotasApi': __LazyApiLoader('quotas_api', 'QuotasApi'),
    'RDLApi': __LazyApiLoader('rdl_api', 'RDLApi'),
    'RolesApi': __LazyApiLoader('roles_api', 'RolesApi'),
    'SMTPApi': __LazyApiLoader('smtp_api', 'SMTPApi'),
    'SNMPAgentsApi': __LazyApiLoader('snmp_agents_api', 'SNMPAgentsApi'),
    'SNMPManagersApi': __LazyApiLoader('snmp_managers_api', 'SNMPManagersApi'),
    'SubnetsApi': __LazyApiLoader('subnets_api', 'SubnetsApi'),
    'SupportApi': __LazyApiLoader('support_api', 'SupportApi'),
    'SyslogApi': __LazyApiLoader('syslog_api', 'SyslogApi'),
    'TargetsApi': __LazyApiLoader('targets_api', 'TargetsApi'),
    'UsageApi': __LazyApiLoader('usage_api', 'UsageApi'),
}

def __getattr__(name, default=None):
    if '_apis_list' == name:
        return __class_apis_dict.keys()
    if name not in __class_apis_dict:
        raise AttributeError(f'module {__name__} has no attribute {name}')
    return __class_apis_dict[name].load()
