"""
    Pure1 Public REST API

    Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com)   The Pure1 REST API 2.0 offers one single form of authentication: OAuth 2.0 via the [Token Exchange protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange).  OAuth 2.0 is an open protocol to allow secure authorization in a simple and standard method from web, mobile, desktop and background applications.  Note that the [Authentication](#section/Authentication) section below mentions 'API Key' as the security scheme type. This is solely for the purpose of allowing testing this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html).  [Knowledge base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)

    The version of the OpenAPI document: 1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import os
from pydantic import BaseModel



from .client import Client

from pypureclient.reference_type import ReferenceType, quoteStrings
from pypureclient.exceptions import PureError
from pypureclient.properties import Property, Filter
from pypureclient.responses import ValidResponse, ErrorResponse, ApiError, ResponseHeaders

def __getattr__(name, default=None):
    import pypureclient.pure1.Pure1_1_5.models as _target_models_package
    _model_class = getattr(_target_models_package, name, default)
    if _model_class:
        if os.environ.get('DOCS_GENERATION') is None:
            for _field_name, _field_info in _model_class.__fields__.items():
                setattr(_model_class, _field_name, Property(_field_info.alias if _field_info.alias else _field_name))
        return _model_class
    else:
        return getattr(__package__, name, default)