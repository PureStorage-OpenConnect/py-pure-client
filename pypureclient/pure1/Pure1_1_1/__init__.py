# coding: utf-8
"""
    Pure1 Public REST API

    Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com) The Pure1 REST API 2.0 offers one single form of authentication: OAuth 2.0 via the [Token Exchange protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange). OAuth 2.0 is an open protocol to allow secure authorization in a simple and standard method from web, mobile, desktop and background applications. Note that the [Authentication](#section/Authentication) section below mentions 'API Key' as the security scheme type. This is solely for the purpose of allowing testing this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html). [Knowledge base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import os
import inspect
import sys

from pydantic import BaseModel
# import models into sdk package
from . import models

from .client import Client
from pypureclient.exceptions import PureError
from pypureclient.properties import Property, Filter
from pypureclient.responses import ValidResponse, ErrorResponse, ApiError, ResponseHeaders

if os.environ.get('DOCS_GENERATION') is None:
    for (_class_name, _class) in inspect.getmembers(models, inspect.isclass):
        if issubclass(_class, BaseModel):
            setattr(sys.modules[__name__], _class_name, _class)
            if  _class != models.ReferenceType:
                for _field_name, _field_info in _class.model_fields.items():
                    setattr(_class, _field_name, Property(_field_info.alias if _field_info.alias else _field_name))
